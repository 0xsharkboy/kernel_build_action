name: 'Android Kernel Build Action'
description: "A action to built android kernel."

branding:
  icon: 'activity'
  color: 'blue'

inputs:
  kernel-url:
    description: 'Kernel Source Url'
    required: true
  depth:
    required: false
    default: 1
  vendor-url:
    description: 'Kernel Vendor Source Url'
    required: false
  kernel-dir:
    required: false
    default: kernel
  vendor:
    required: false
    default: false
  vendor-dir:
    required: false
    default: vendor
  branch:
    description: 'Branch name'
    required: false
    default: main
  config:
    description: 'configuration for building android kernel'
    required: true
    default: defconfig
  arch:
    required: true
    default: arm64
  android-version:
    description: 'Android version.'
    required: true
    default: 12
  ksu:
    description: 'KernelSU function support'
    required: false
    default: false
  ksu-version:
    description: 'KernelSU default branch'
    required: false
    default: "main"
  overlayfs:
    description: 'Enable Overlayfs for ksu'
    required: false
    default: false
  disable-lto:
    description: 'Disable LTO configs for configs.'
    required: false
    default: false
  lxc:
    description: 'Enable lxc and docker configs for configs.'
    required: false
    default: false
  lxc-patch:
    description: 'Apply lxc patch aviod not booting'
    required: false
    default: false
  nethunter:
    description: 'Enable Kali nethunter'
    required: false
    default: false
  nethunter-patch:
    description: 'patch config'
    required: false
    default: false
  kvm:
    description: 'Enable KVM for configs.'
    required: false
    default: false
  ccache:
    description: 'Enable Ccache for compiling kernel'
    required: false
    default: false
  aosp-gcc:
    description: 'Use gcc from aosp project.'
    required: true
    default: true
  aosp-clang:
    description: 'Use clang from aosp project.'
    required: false
    default: false
  aosp-clang-version:
    required: false
    default: "r383902"
  other-clang-url:
    required: false
    default: ''
  other-clang:
    description: 'Use clang from 3rd party.'
    required: false
    default: false
  other-clang-branch:
    required: false
    default: main
  android-ndk:
    description: 'Use Android NDK to build kernrl (Experimental features)'
    required: false
    default: false
  android-ndk-version:
    required: false
    default: r21
  android-ndk-x64:
    required: false
    default: true
  python-27:
    description: 'Use python2.7 when build kernel.'
    required: false
    default: false
  anykernel3:
    description: 'Package kernel use anykernel3.'
    required: false
    default: false
  bootimg-url:
    description: "boot.img path"
    required: false
    default: ""
  release:
    description: "After the kernel compilation is completed, it will be automatically published to the releases page"
    required: false
    default: false
  access-token:
    description: 'PAT with repository scope (https://github.com/settings/tokens)'
    required: false
  extra-cmd:
    description: 'Extra options of building kernel.'
    required: false
    default: "all"

runs:
  using: 'composite'
  steps:

    - name: Setup ccache
      if: inputs.ccache == 'true'
      uses: hendrikmuhs/ccache-action@v1.2 
      with:
        key: build-kernel-${{ inputs.arch }}${{ inputs.config }}
        max-size: 4G

    - name: Build Kernel
      shell: bash
      run: |
        curl -SsL https://github.com/dabao1955/kernel_build_action/raw/main/main.sh | bash
      env:
       KERNEL_URL: ${{ inputs.kernel-url }}
       KERNEL_DIR: ${{ inputs.kernel-dir }}
       DEPTH: ${{ inputs.depth }}
       VENDOR: ${{ inputs.vendor }}
       VENDOR_URL: ${{ inputs.vendor-url }}
       VENDOR_DIR: ${{ inputs.vendor-dir }}
       BRANCH: ${{ inputs.branch }}
       CONFIG: ${{ inputs.config }}
       ARCH: ${{ inputs.arch }}
       ANDROID_VERSION: ${{ inputs.android-version }}
       KSU: ${{ inputs.ksu }}
       KSU_VERSION: ${{ inputs.ksu-version }}
       DISABLE_LTO: ${{ inputs.disable-lto }}
       OVERLAYFS: ${{ inputs.overlayfs }}
       LXC: ${{ inputs.lxc }}
       LXC_PATCH: ${{ inputs.lxc-patch }}
       NETHUNTER: ${{ inputs.nethunter }}
       NETHUNTER_PATCH: ${{ inputs.nethunter-patch }}
       KVM: ${{ inputs.kvm }}
       CCACHE: ${{ inputs.ccache }}
       AOSP_CLANG: ${{ inputs.aosp-clang }}
       AOSP_GCC: ${{ inputs.aosp-gcc }}
       AOSP_CLANG_VERSION: ${{ inputs.aosp-clang-version }}
       OTHER_CLANG: ${{ inputs.other-clang }}
       OTHER_CLANG_URL: ${{ inputs.other-clang-url }}
       OTHER_CLANG_BRANCH: ${{ inputs.other-clang-branch }}
       ANDROID_NDK: ${{ inputs.android-ndk }}
       ANDROID_NDK_VERSION: ${{ inputs.android-ndk-version }}
       ANDROID_NDK_X64: ${{ inputs.android-ndk-x64 }}
       PYTHON27: ${{ inputs.python-27 }}
       ANYKERNEL3: ${{ inputs.anykernel3 }}
       RELEASE: ${{ inputs.release }}
       BOOTIMG_URL: ${{ inputs.bootimg-url }}
       EXTRA_CMD: ${{ inputs.extra-cmd }}

    - id: uploadi
      if: inputs.release == 'false'
      uses: actions/upload-artifact@v3.1.3
      with:
        name: kernel-built
        path: build/*


    - id: release
      if: inputs.release == 'true'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.access-token }}
      with:
        name: Last CI build kernel
        tag: last-ci
        files: build/*

posts:
  using: 'composite'
  steps:
    - name: post
      shell: bash
      run:  $HOME/clang/bin/clang --version
